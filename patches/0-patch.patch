diff --git a/build.sh b/build.sh
index e663cce..341d3f9 100755
--- a/build.sh
+++ b/build.sh
@@ -74,7 +74,7 @@ BUILD_ARGS_COMMON="
 	--platform=linux/${GOARCH}
 	--build-arg POLICY --build-arg PLATFORM --build-arg BASEIMAGE
 	--build-arg DEVTOOLSET_ROOTPATH --build-arg PREPEND_PATH --build-arg LD_LIBRARY_PATH_ARG
-	--rm -t quay.io/pypa/${POLICY}_${PLATFORM}:${COMMIT_SHA}
+	--rm -t ghcr.io/karellen/${POLICY}_${PLATFORM}:${COMMIT_SHA}
 	-f docker/Dockerfile docker/
 "
 
@@ -104,7 +104,7 @@ else
 	exit 1
 fi
 
-docker run --rm -v $(pwd)/tests:/tests:ro quay.io/pypa/${POLICY}_${PLATFORM}:${COMMIT_SHA} /tests/run_tests.sh
+docker run --rm -v $(pwd)/tests:/tests:ro ghcr.io/karellen/${POLICY}_${PLATFORM}:${COMMIT_SHA} /tests/run_tests.sh
 
 if [ ${USE_LOCAL_CACHE} -ne 0 ]; then
 	if [ -d $(pwd)/.buildx-cache-${POLICY}_${PLATFORM} ]; then
diff --git a/deploy.sh b/deploy.sh
index d59ae7b..b76ec6d 100755
--- a/deploy.sh
+++ b/deploy.sh
@@ -11,7 +11,7 @@ fi
 
 set -x
 
-TAG="quay.io/pypa/${POLICY}_${PLATFORM}"
+TAG="ghcr.io/karellen/${POLICY}_${PLATFORM}"
 COMMIT_ABBREV_SHA=$(git show -s --format=%h ${COMMIT_SHA})
 COMMIT_DATE=$(git show -s --format=%cd --date=short ${COMMIT_SHA})
 BUILD_ID=${COMMIT_DATE}-${COMMIT_ABBREV_SHA}
@@ -30,7 +30,7 @@ docker tag ${TAG}:${COMMIT_SHA} ${TAG}:latest
 set +x
 
 if [ $DRY_RUN -eq 0 ]; then
-  docker login -u $QUAY_USERNAME -p $QUAY_PASSWORD quay.io
+  docker login -u $ -p $GITHUB_TOKEN ghcr.io
   docker push ${TAG}:${BUILD_ID}
   docker push ${TAG}:${BUILD_ID2}
   docker push ${TAG}:latest
diff --git a/docker/build_scripts/build-cpython.sh b/docker/build_scripts/build-cpython.sh
index ea7485a..8749ba7 100755
--- a/docker/build_scripts/build-cpython.sh
+++ b/docker/build_scripts/build-cpython.sh
@@ -35,11 +35,16 @@ mkdir -p ${PREFIX}/lib
 CFLAGS_EXTRA=""
 CONFIGURE_ARGS="--disable-shared --with-ensurepip=no"
 
-if [ "${2:-}" == "nogil" ]; then
+if [ "${2:-}" == "nogil" -o "${3:-}" == "nogil" ]; then
 	PREFIX="${PREFIX}-nogil"
 	CONFIGURE_ARGS="${CONFIGURE_ARGS} --disable-gil"
 fi
 
+if [ "${2:-}" == "shared" -o "${3:-}" == "shared" ]; then
+	PREFIX="${PREFIX}-shared"
+	CONFIGURE_ARGS="${CONFIGURE_ARGS} --enable-shared"
+fi
+
 if [ "${CPYTHON_VERSION}" == "3.6.15" ]; then
 	# https://github.com/python/cpython/issues/89863
 	# gcc-12+ uses these 2 flags in -O2 but they were only enabled in -O3 with gcc-11
@@ -69,6 +74,9 @@ make > /dev/null
 make install > /dev/null
 popd
 rm -rf Python-${CPYTHON_VERSION} Python-${CPYTHON_VERSION}.tgz Python-${CPYTHON_VERSION}.tgz.asc
+if [ "${2:-}" == "shared" -o "${3:-}" == "shared" ]; then
+	patchelf --force-rpath --set-rpath '$ORIGIN/../lib' ${PREFIX}/bin/python3
+fi
 
 if [ "${OPENSSL_PREFIX}" != "" ]; then
 	rm -rf ${OPENSSL_PREFIX}/bin ${OPENSSL_PREFIX}/include ${OPENSSL_PREFIX}/lib/pkgconfig ${OPENSSL_PREFIX}/lib/*.so
@@ -79,3 +87,6 @@ clean_pyc ${PREFIX}
 
 # Strip ELF files found in ${PREFIX}
 strip_ ${PREFIX}
+
+# Test that python is functioning
+${PREFIX}/bin/python3 -c "pass"
diff --git a/docker/build_scripts/finalize-one.sh b/docker/build_scripts/finalize-one.sh
index 197ffcc..cee149d 100755
--- a/docker/build_scripts/finalize-one.sh
+++ b/docker/build_scripts/finalize-one.sh
@@ -16,6 +16,9 @@ fi
 PY_VER=$(${PREFIX}/bin/python -c "import sys; print('.'.join(str(v) for v in sys.version_info[:2]))")
 PY_IMPL=$(${PREFIX}/bin/python -c "import sys; print(sys.implementation.name)")
 PY_GIL=$(${PREFIX}/bin/python -c "import sysconfig; print('t' if sysconfig.get_config_vars().get('Py_GIL_DISABLED', 0) else '')")
+if [[ "${PREFIX}" == *"-shared"* ]]; then
+	PY_SHARED="-shared"
+fi
 
 # disable some pip warnings
 export PIP_ROOT_USER_ACTION=ignore
@@ -39,15 +42,17 @@ if [ -e ${PREFIX}/bin/pip3 ] && [ ! -e ${PREFIX}/bin/pip ]; then
 fi
 # Create a symlink to PREFIX using the ABI_TAG in /opt/python/
 ABI_TAG=$(${PREFIX}/bin/python ${MY_DIR}/python-tag-abi-tag.py)
-ln -s ${PREFIX} /opt/python/${ABI_TAG}
+ln -s ${PREFIX} /opt/python/${ABI_TAG}${PY_SHARED:-}
 
 # Make versioned python commands available directly in environment.
-# Don't use symlinks: c.f. https://github.com/python/cpython/issues/106045
-cat <<EOF > /usr/local/bin/${PY_IMPL}${PY_VER}${PY_GIL}
+if [ -z "${PY_SHARED:-}" ]; then
+	# Don't use symlinks: c.f. https://github.com/python/cpython/issues/106045
+	cat <<EOF > /usr/local/bin/${PY_IMPL}${PY_VER}${PY_GIL}
 #!/bin/sh
 exec /opt/python/${ABI_TAG}/bin/python "\$@"
 EOF
-chmod +x /usr/local/bin/${PY_IMPL}${PY_VER}${PY_GIL}
-if [[ "${PY_IMPL}" == "cpython" ]]; then
+	chmod +x /usr/local/bin/${PY_IMPL}${PY_VER}${PY_GIL}
+fi
+if [ "${PY_IMPL}" == "cpython" -a -z "${PY_SHARED:-}" ]; then
 	ln -s ${PY_IMPL}${PY_VER}${PY_GIL} /usr/local/bin/python${PY_VER}${PY_GIL}
 fi
diff --git a/docker/build_scripts/install-runtime-packages.sh b/docker/build_scripts/install-runtime-packages.sh
index 402021a..61f0edc 100755
--- a/docker/build_scripts/install-runtime-packages.sh
+++ b/docker/build_scripts/install-runtime-packages.sh
@@ -56,7 +56,7 @@ else
 	exit 1
 fi
 
-BASETOOLS="autoconf automake bison bzip2 diffutils file make patch unzip"
+BASETOOLS="autoconf automake bison bzip2 diffutils file make patch unzip patchelf"
 if [ "${AUDITWHEEL_POLICY}" == "manylinux2014" ]; then
 	PACKAGE_MANAGER=yum
 	BASETOOLS="${BASETOOLS} hardlink hostname which"
@@ -74,14 +74,15 @@ if [ "${AUDITWHEEL_POLICY}" == "manylinux2014" ]; then
 	TOOLCHAIN_DEPS="devtoolset-10-binutils devtoolset-10-gcc devtoolset-10-gcc-c++ devtoolset-10-gcc-gfortran"
 	if [ "${AUDITWHEEL_ARCH}" == "x86_64" ]; then
 		# Software collection (for devtoolset-10)
-		yum -y install centos-release-scl-rh
-		# EPEL support (for yasm)
-		yum -y install https://archives.fedoraproject.org/pub/archive/epel/7/x86_64/Packages/e/epel-release-7-14.noarch.rpm
+		yum -y install centos-release-scl-rh epel-release
 		TOOLCHAIN_DEPS="${TOOLCHAIN_DEPS} yasm"
 	elif [ "${AUDITWHEEL_ARCH}" == "aarch64" ] || [ "${AUDITWHEEL_ARCH}" == "ppc64le" ] || [ "${AUDITWHEEL_ARCH}" == "s390x" ]; then
 		# Software collection (for devtoolset-10)
-		yum -y install centos-release-scl-rh
+		yum -y install centos-release-scl-rh epel-release
 	elif [ "${AUDITWHEEL_ARCH}" == "i686" ]; then
+		# No epel-release
+		curl -Ls https://github.com/NixOS/patchelf/releases/download/0.18.0/patchelf-0.18.0-i686.tar.gz | tar -xzf - -C /usr
+		BASETOOLS="$(echo -n ${BASETOOLS} | sed 's/patchelf//')"
 		# No yasm on i686
 		# Install mayeut/devtoolset-10 repo to get devtoolset-10
 		curl -fsSLo /etc/yum.repos.d/mayeut-devtoolset-10.repo https://copr.fedorainfracloud.org/coprs/mayeut/devtoolset-10/repo/custom-1/mayeut-devtoolset-10-custom-1.repo
@@ -97,7 +98,7 @@ elif [ "${AUDITWHEEL_POLICY}" == "manylinux_2_28" ]; then
 	# Make sure that locale will not be removed
 	sed -i '/^override_install_langs=/d' /etc/yum.conf
 	dnf -y upgrade
-	dnf -y install dnf-plugins-core
+	dnf -y install dnf-plugins-core epel-release
 	dnf config-manager --set-enabled powertools # for yasm
 	TOOLCHAIN_DEPS="gcc-toolset-12-binutils gcc-toolset-12-gcc gcc-toolset-12-gcc-c++ gcc-toolset-12-gcc-gfortran"
 	if [ "${AUDITWHEEL_ARCH}" == "x86_64" ]; then
diff --git a/docker/build_scripts/manylinux-interpreters.py b/docker/build_scripts/manylinux-interpreters.py
index e33b1e6..949df3a 100644
--- a/docker/build_scripts/manylinux-interpreters.py
+++ b/docker/build_scripts/manylinux-interpreters.py
@@ -28,7 +28,7 @@ def sort_key(tag):
 
 @cache
 def get_all_tags(no_check: bool = False):
-    all_tags_ = set(p.name for p in INSTALL_DIR.iterdir() if p.is_dir())
+    all_tags_ = set(p.name for p in INSTALL_DIR.iterdir() if p.is_dir() and "-shared" not in p.name)
     if POLICY.startswith("manylinux"):
         all_tags_ |= set(tag for tag in PYTHON_TAGS if ARCH in PYTHON_TAGS[tag])
     if no_check:
diff --git a/tests/run_tests.sh b/tests/run_tests.sh
index b1777b9..9f09ec5 100755
--- a/tests/run_tests.sh
+++ b/tests/run_tests.sh
@@ -54,6 +54,9 @@ fi
 
 PYTHON_COUNT=0
 for PYTHON in /opt/python/*/bin/python; do
+	if [[ "$PYTHON" == /opt/python/*-shared*/bin/python ]]; then
+		continue
+	fi
 	# Smoke test to make sure that our Pythons work, and do indeed detect as
 	# being manylinux compatible:
 	$PYTHON $MY_DIR/manylinux-check.py ${AUDITWHEEL_POLICY} ${AUDITWHEEL_ARCH}
